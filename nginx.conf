# events { worker_connections 1024; }

# http {
#   include mime.types;
#   types {
#     application/javascript js;
#     text/css css;
#     text/html html;
#   }
#   default_type application/octet-stream;

#   server{
#     listen 80;
#     server_name writingtracker.byu.edu;
#     location / {
#       return 301 https://$host$request_uri;
#     }
#   }

#   server {
#     listen 80;
#     server_name writingtracker.byu.edu;

    

#     location / {
#       root /usr/share/nginx/html;
#       index index.html;
#       try_files $uri /index.html;
#     }

#     location /api/ {
#       proxy_pass http://api:3000;
#       proxy_set_header Host $host;
#       proxy_set_header X-Real-IP $remote_addr;
#       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

#       # CORS Headers
#     if ($request_method = OPTIONS) {
#         add_header Access-Control-Allow-Origin *;
#         add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
#         add_header Access-Control-Allow-Headers "Authorization, Content-Type";
#         return 204;
#     }

#       #Allow CORS
#       add_header Access-Control-Allow-Origin $http_origin;
#       add_header Access-Control-Allow-Credentials true;
#       add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
#       add_header Access-Control-Allow-Headers "Authorization, Content-Type";

#       # Handle Preflight Requests
#       if ($request_method = OPTIONS) {
#         return 204;
#       }
      
#     }
#   }
# }

# nginx.conf

worker_processes auto;

events { worker_connections 1024; }

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml text/javascript;
    gzip_min_length 256;

    upstream backend_api {
        server api:3000;
    }

    server {
        listen 80;
        server_name _;

        root /usr/share/nginx/html;
        index index.html;

        # SPA routing
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Proxy API requests to the backend container
        location /api/ {
            proxy_pass http://backend_api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /favicon.ico { log_not_found off; access_log off; }
        location = /robots.txt { log_not_found off; access_log off; }
    }
}
